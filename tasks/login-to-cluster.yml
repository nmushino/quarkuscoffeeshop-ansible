- name: get oc location
  command:  "whereis oc"
  register: oc_location_result
  ignore_errors: false
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat' or ansible_distribution == 'Fedora'
  tags: always 

- name: set oc location
  set_fact:
    oc_location: "{{ oc_location_result.stdout.split(':')[1] }}"
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat' or ansible_distribution == 'Fedora'
  tags: always 

- name: get oc location
  command:  "which oc"
  register: oc_location_result
  ignore_errors: false
  when: ansible_distribution == 'MacOSX'
  tags: always 

- name: set oc location
  set_fact:
    oc_location: "{{ oc_location_result.stdout  | trim() }}"
  when: ansible_distribution == 'MacOSX'
  tags: always 

- name: set oc location ubuntu 
  set_fact:
    oc_location: /usr/bin/oc
  when: ansible_distribution == 'Ubuntu'
  tags: always

- name: login as super user with token on OpenShift 4
  command: "{{ oc_location }} login --token={{ openshift_token }}  --server={{ openshift_url }} --insecure-skip-tls-verify={{ insecure_skip_tls_verify }}"
  when:
   - openshift_token is defined
   - openshift_token is not none
   - openshift_token|trim() != ""
  ignore_errors: no
  tags: always 

